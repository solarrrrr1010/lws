# Generated by Django 4.0.2 on 2022-02-26 08:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlembicVersion',
            fields=[
                ('version_num', models.CharField(max_length=32, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'alembic_version',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='temp.djangocontenttype')),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': True,
                'unique_together': {('content_type', 'codename')},
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ClinicalNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'clinical_note',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('concept_id', models.IntegerField(primary_key=True, serialize=False)),
                ('concept_name', models.CharField(blank=True, max_length=255, null=True)),
                ('domain_id', models.CharField(blank=True, max_length=20, null=True)),
                ('vocabulary_id', models.CharField(blank=True, max_length=20, null=True)),
                ('concept_class_id', models.CharField(blank=True, max_length=20, null=True)),
                ('standard_concept', models.CharField(blank=True, max_length=1, null=True)),
                ('concept_code', models.CharField(blank=True, max_length=50, null=True)),
                ('valid_start_date', models.DateField(blank=True, null=True)),
                ('valid_end_date', models.DateField(blank=True, null=True)),
                ('invalid_reason', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'concept',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DrugPair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_concept_id1', models.IntegerField(blank=True, null=True)),
                ('drug_concept_id2', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'drug_pair',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=100)),
                ('buy_count', models.IntegerField()),
                ('order_time', models.DateField()),
            ],
            options={
                'db_table': 'orders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orderss',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=100)),
                ('buy_count', models.IntegerField()),
            ],
            options={
                'db_table': 'orderss',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('person_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('year_of_birth', models.IntegerField(blank=True, null=True)),
                ('month_of_birth', models.IntegerField(blank=True, null=True)),
                ('day_of_birth', models.IntegerField(blank=True, null=True)),
                ('birth_datetime', models.DateTimeField(blank=True, null=True)),
                ('ethnicity_concept_id', models.IntegerField(blank=True, null=True)),
                ('location_id', models.BigIntegerField(blank=True, null=True)),
                ('provider_id', models.BigIntegerField(blank=True, null=True)),
                ('care_site_id', models.BigIntegerField(blank=True, null=True)),
                ('person_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('gender_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('gender_source_concept_id', models.IntegerField(blank=True, null=True)),
                ('race_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('race_source_concept_id', models.IntegerField(blank=True, null=True)),
                ('ethnicity_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('ethnicity_source_concept_id', models.IntegerField(blank=True, null=True)),
                ('gender_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='gender_concept', to='temp.concept')),
                ('race_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='race_concept', to='temp.concept')),
            ],
            options={
                'db_table': 'person',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('create_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'question',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=100)),
                ('user_level', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VisitOccurrence',
            fields=[
                ('visit_occurrence_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('visit_start_date', models.DateField(blank=True, null=True)),
                ('visit_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('visit_end_date', models.DateField(blank=True, null=True)),
                ('visit_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('provider_id', models.BigIntegerField(blank=True, null=True)),
                ('care_site_id', models.BigIntegerField(blank=True, null=True)),
                ('visit_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('admitted_from_concept_id', models.IntegerField(blank=True, null=True)),
                ('admitted_from_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('discharge_to_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('discharge_to_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='discharge_to_concept', to='temp.concept')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='temp.person')),
                ('preceding_visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='temp.visitoccurrence')),
                ('visit_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='visit_concept', to='temp.concept')),
                ('visit_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='visit_source_concept', to='temp.concept')),
                ('visit_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='visit_type_concept', to='temp.concept')),
            ],
            options={
                'db_table': 'visit_occurrence',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DrugExposure',
            fields=[
                ('drug_exposure_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('drug_exposure_start_date', models.DateField(blank=True, null=True)),
                ('drug_exposure_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('drug_exposure_end_date', models.DateField(blank=True, null=True)),
                ('drug_exposure_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('verbatim_end_date', models.DateField(blank=True, null=True)),
                ('stop_reason', models.CharField(blank=True, max_length=20, null=True)),
                ('refills', models.IntegerField(blank=True, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('days_supply', models.IntegerField(blank=True, null=True)),
                ('sig', models.TextField(blank=True, null=True)),
                ('lot_number', models.CharField(blank=True, max_length=50, null=True)),
                ('provider_id', models.BigIntegerField(blank=True, null=True)),
                ('visit_detail_id', models.BigIntegerField(blank=True, null=True)),
                ('drug_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('route_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('dose_unit_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('drug_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='drug_concept', to='temp.concept')),
                ('drug_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='drug_source_concept', to='temp.concept')),
                ('drug_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='drug_type_concept', to='temp.concept')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='temp.person')),
                ('route_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='route_concept', to='temp.concept')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='temp.visitoccurrence')),
            ],
            options={
                'db_table': 'drug_exposure',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='temp.djangocontenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='temp.authuser')),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Death',
            fields=[
                ('death_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('death_date', models.DateField(blank=True, null=True)),
                ('death_datetime', models.DateTimeField(blank=True, null=True)),
                ('death_type_concept_id', models.IntegerField(blank=True, null=True)),
                ('cause_source_value', models.IntegerField(blank=True, null=True)),
                ('cause_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='cause_concept', to='temp.concept')),
                ('cause_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='cause_source_concept', to='temp.concept')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='temp.person')),
            ],
            options={
                'db_table': 'death',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ConditionOccurrence',
            fields=[
                ('condition_occurrence_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('condition_start_date', models.DateField(blank=True, null=True)),
                ('condition_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('condition_end_date', models.DateField(blank=True, null=True)),
                ('condition_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('stop_reason', models.CharField(blank=True, max_length=20, null=True)),
                ('provider_id', models.BigIntegerField(blank=True, null=True)),
                ('visit_detail_id', models.BigIntegerField(blank=True, null=True)),
                ('condition_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('condition_status_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('condition_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='condition_concept', to='temp.concept')),
                ('condition_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='condition_source_concept', to='temp.concept')),
                ('condition_status_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='condition_status_concept', to='temp.concept')),
                ('condition_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='condition_type_concept', to='temp.concept')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='temp.person')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='temp.visitoccurrence')),
            ],
            options={
                'db_table': 'condition_occurrence',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('create_date', models.DateTimeField()),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='temp.question')),
            ],
            options={
                'db_table': 'answer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='temp.authpermission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='temp.authuser')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': True,
                'unique_together': {('user', 'permission')},
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='temp.authgroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='temp.authuser')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': True,
                'unique_together': {('user', 'group')},
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='temp.authgroup')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='temp.authpermission')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': True,
                'unique_together': {('group', 'permission')},
            },
        ),
    ]
